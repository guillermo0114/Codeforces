
#include <bits/stdc++.h>
#define N 103

using namespace::std;

pair <int, int> A[N], B[N];
vector <int> G[N];
bool visit[N];

void bfs( int source )
{
	visit[source] = true;
	queue <int> Q;
	Q.push(source);
	
	while( !Q.empty() )
	{
		int q = Q.front();
		Q.pop();
		for( int i = 0; i < G[q].size(); i++ )
		{
			int s = G[q][i];
			if( !visit[s] )
			{
				visit[s] = true;
				Q.push(s);
			}
		}
	}
}


int main( void )
{
	int n, a, b, cont = -1;
	scanf("%d",&n);
	for( int i = 0; i < n; i++ )
	{
		scanf("%d%d",&a,&b);
		A[i] = make_pair(a,i);
		B[i] = make_pair(b,i);
	}
	
	sort( A, A+n );
	sort( B, B+n );

	for( int i = 1; i < n; i++ )
	{
		if( A[i].first == A[i-1].first )
		{
			G[A[i].second].push_back(A[i-1].second);
			G[A[i-1].second].push_back(A[i].second);
		}
	}
	
	for( int i = 1; i < n; i++ )
	{
		if( B[i].first == B[i-1].first )
		{
			G[B[i].second].push_back(B[i-1].second);
			G[B[i-1].second].push_back(B[i].second);
		}
	}	

	for( int i = 0; i < n; i++ )
	{
		if( !visit[i] ) 
		{
			bfs(i);
			cont++;
		}
	}
	
	cout << cont << endl;

	return 0;
}



